general:  # General server settings.
  host: http://localhost:8080 # HTTP address of Indentifo server.
  privateKeyPath: jwt/private.pem # Private key for signing JWT tokens.
  publicKeyPath: jwt/public.pem   # Public key for verifying JWT tokens.
  issuer: http://localhost:8080   # JWT token issuer.
  algorithm: auto  # Algorithm for the token service. Supported values are: "rs256", "es256" and "auto".

# Names of environment variables that store admin credentials.
adminAccount:
  loginEnvName: IDENTIFO_ADMIN_LOGIN
  passwordEnvName: IDENTIFO_ADMIN_PASSWORD

# Storage settings holds together all storage settings.
# All settings for particular database engine (i.e, filepaths for BoltDB,
# endpoints and regions for DynamoDB etc.) are assumed to be the same across
# all storages. If they are not the same, the latest option in this file will be applied.
# For example, if there are two MongoDB-backed storages, appStorage and tokenStorage,
# and endpoint for appStorage is localhost:27017, while tokenStorage's endpoint is localhost:27018,
# server will connect both storages to localhost:27018.
storage:
  appStorage:
    # Type of the database. Supported values are: "boltdb", "mongodb", "dynamodb" and "fake" for in-memory storage.
    type: boltdb
    # Name of the database (MongoDB-specific)
    name: identifo
    # Endpoint of the database server (MongoDB and DynamoDB specific). For DynamoDB, can be inferred from the region automatically.
    endpoint: localhost:27017
    # AWS Region where the database is located in (DynamoDB-specific).
    # Full list of possible values: https://docs.aws.amazon.com/general/latest/gr/rande.html.
    region: us-east-2
    # Path to the database file (BoltDB-specific).
    path: ./db.db
  userStorage:
    type: boltdb
    name: identifo
    endpoint: localhost:27017
    region: us-east-2
    path: ./db.db
  tokenStorage:
    type: boltdb
    name: identifo
    endpoint: localhost:27017
    region: us-east-2
    path: ./db.db
  tokenBlacklist:
    type: boltdb 
    name: identifo
    endpoint: localhost:27017
    region: us-east-2
    path: ./db.db
  verificationCodeStorage:
    type: boltdb
    name: identifo
    endpoint: localhost:27017
    region: us-east-2
    path: ./db.db

# Storage for admin sessions.
sessionStorage: 
  type: memory # Supported values are "memory", "redis", and "dynamodb".
  # Admin session duration in seconds.
  # This value specifies the maximum time of inactivity in the admin panel before asking to relogin.
  sessionDuration: 300
  address: # Redis-related setting.
  password: # Redis-related setting.
  db: # Redis-related setting.
  region: # DynamoDB-related setting.
  endpoint: # DynamoDB-related setting. Can be figured out automatically from the region.

# Storage for server configuration.
configurationStorage:
  # Configuration storage type. Supported values are: "etcd", "s3", and "file".
  type: file
  # Key for accessing server settings in the configuraion storage.
  # If type is etcd, must be a key name (e.g, identifo/server-settings).
  # If type is s3, must be a name of an object in the bucket (e.g, server-config.yaml).
  # If type is file, must be a filename (e.g, server-config.yaml).
  settingsKey: server-config.yaml
  endpoints: # Etcd-related setting.
  region: # S3-related setting.

staticFiles:
  serverConfigPath: server-config.yaml   # File with server settings.
  staticFolderPath: ./static   # Folder for the static files.
  emailTemplatesPath: ./email_templates   # Forder for the email templates.
  emailTemplateNames:   # Email template names.
    welcome: welcome.html
    resetPassword: reset_password.html
    invite: invite_email.html
    verify: verify_email.html
    tfa: tfa_email.html
  # Needed when serving admin panel right from the Identifo server (e.g, as AWS Lamdba).
  adminPanelBuildPath: ./admin_panel/build

login:   # Supported login ways.
  loginWith:
    phone: true
    username: true
    federated: true
  # Type of two-factor authentication, if application enables it.
  # Supported values are: "app" (like Google Authenticator), "sms", "email".
  tfaType: app

externalServices: 
  mailService: mock  # Mail service name. Supported values are "mailgun", "aws ses", and "mock".
  smsService:   # SMS service settings.
    type: mock # Supported values are: "twilio", "mock".
    accountSid: # Twilio-related setting.
    authToken: # Twilio-related setting.
    serviceSid: # Twilio-related setting.