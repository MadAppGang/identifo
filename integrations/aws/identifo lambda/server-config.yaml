general:  # General server settings.
  host: http://localhost:8081
  issuer: http://localhost:8081   
  algorithm: auto

adminAccount:
  loginEnvName: IDENTIFO_ADMIN_LOGIN
  passwordEnvName: IDENTIFO_ADMIN_PASSWORD

storage:
  appStorage:
    type: dynamodb
    region: us-east-1
  userStorage:
    type: dynamodb
    region: us-east-1
  tokenStorage:
    type: dynamodb
    region: us-east-1
  tokenBlacklist:
    type: dynamodb
    region: us-east-1
  verificationCodeStorage:
    type: dynamodb
    region: us-east-1

sessionStorage: 
  type: dynamodb
  region: us-east-1
  sessionDuration: 300

# If using Identifo as AWS Lambda, we cannot update config file,
# as Lambda environment is a read-only one. That's why we must
# store configuration file in, for example, S3 bucket.
# AWS Access Key, Secret Access Key, and bucket name must be stored
# in environment variables.
configurationStorage:
  type: s3
  settingsKey: server-config.yaml
  region: us-east-1
  bucket: # If "IDENTIFO_CONFIG_BUCKET" env variable is set, it overrides the value specified here.
  keyStorage: # Storage for keys used for signing and verifying JWTs.
    type: s3 # Key storage type. Supported values are "file" and "s3".
    # Key names.
    # If type is file, must be a filepath (e.g, jwt/public.pem).
    # If type is s3, must be a name of an object in the bucket (e.g, public.pem).
    publicKey: public.pem
    privateKey: private.pem
    region: us-east-1 # S3-related setting.
    bucket: # If "IDENTIFO_JWT_KEYS_BUCKET" env variable is set, it overrides the value specified here.

staticFilesStorage:
  type: s3
  serverConfigPath: server-config.yaml
  staticFilesLocation: # If "IDENTIFO_STATIC_FILES_BUCKET" env variable is set, it overrides the value specified here.
  region: # S3-specific setting. Needed when type is s3.
  pagesPath: ./html
  emailTemplatesPath: ./email_templates
  appleFilesPath: ./apple
  serveAdminPanel: true
  adminPanelBuildPath: ./admin_panel/build

login:
  loginWith:
    phone: true
    username: true
    federated: true
  tfaType: app

externalServices: 
  emailService:
    type: mock
    domain:
    privateKey:
    publicKey:
    sender:
    region:
  smsService:
    type: mock