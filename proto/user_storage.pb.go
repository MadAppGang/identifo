// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: user_storage.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FederatedIdentityProvider int32

const (
	FederatedIdentityProvider_UNKNOWN  FederatedIdentityProvider = 0
	FederatedIdentityProvider_FACEBOOK FederatedIdentityProvider = 1
	FederatedIdentityProvider_GOOGLE   FederatedIdentityProvider = 2
	FederatedIdentityProvider_TWITTER  FederatedIdentityProvider = 3
	FederatedIdentityProvider_APPLE    FederatedIdentityProvider = 4
)

// Enum value maps for FederatedIdentityProvider.
var (
	FederatedIdentityProvider_name = map[int32]string{
		0: "UNKNOWN",
		1: "FACEBOOK",
		2: "GOOGLE",
		3: "TWITTER",
		4: "APPLE",
	}
	FederatedIdentityProvider_value = map[string]int32{
		"UNKNOWN":  0,
		"FACEBOOK": 1,
		"GOOGLE":   2,
		"TWITTER":  3,
		"APPLE":    4,
	}
)

func (x FederatedIdentityProvider) Enum() *FederatedIdentityProvider {
	p := new(FederatedIdentityProvider)
	*p = x
	return p
}

func (x FederatedIdentityProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FederatedIdentityProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_user_storage_proto_enumTypes[0].Descriptor()
}

func (FederatedIdentityProvider) Type() protoreflect.EnumType {
	return &file_user_storage_proto_enumTypes[0]
}

func (x FederatedIdentityProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FederatedIdentityProvider.Descriptor instead.
func (FederatedIdentityProvider) EnumDescriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{0}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id"`
	// @inject_tag: json:"username" bson:"username"
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username" bson:"username"`
	// @inject_tag: json:"email" bson:"email"
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email" bson:"email"`
	// @inject_tag: json:"phone" bson:"phone"
	Phone string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone" bson:"phone"`
	// @inject_tag: json:"password_hash" bson:"password_hash"
	PasswordHash string `protobuf:"bytes,5,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash" bson:"password_hash"`
	// @inject_tag: json:"is_active" bson:"is_active"
	IsActive bool `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active" bson:"is_active"`
	// @inject_tag: json:"tfa_info" bson:"tfa_info"
	TfaInfo *TFAInfo `protobuf:"bytes,7,opt,name=tfa_info,json=tfaInfo,proto3" json:"tfa_info" bson:"tfa_info"`
	// @inject_tag: json:"federated_ids" bson:"federated_ids"
	FederatedIds []string `protobuf:"bytes,8,rep,name=federated_ids,json=federatedIds,proto3" json:"federated_ids" bson:"federated_ids"`
	// @inject_tag: json:"num_of_logins" bson:"num_of_logins"
	NumOfLogins uint32 `protobuf:"varint,9,opt,name=num_of_logins,json=numOfLogins,proto3" json:"num_of_logins" bson:"num_of_logins"`
	// @inject_tag: json:"latest_login_time" bson:"latest_login_time"
	LatestLoginTime int64 `protobuf:"varint,10,opt,name=latest_login_time,json=latestLoginTime,proto3" json:"latest_login_time" bson:"latest_login_time"`
	// @inject_tag: json:"access_role" bson:"access_role"
	AccessRole string `protobuf:"bytes,11,opt,name=access_role,json=accessRole,proto3" json:"access_role" bson:"access_role"`
	// @inject_tag: json:"is_anonymous" bson:"is_anonymous"
	IsAnonymous bool `protobuf:"varint,12,opt,name=is_anonymous,json=isAnonymous,proto3" json:"is_anonymous" bson:"is_anonymous"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *User) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *User) GetTfaInfo() *TFAInfo {
	if x != nil {
		return x.TfaInfo
	}
	return nil
}

func (x *User) GetFederatedIds() []string {
	if x != nil {
		return x.FederatedIds
	}
	return nil
}

func (x *User) GetNumOfLogins() uint32 {
	if x != nil {
		return x.NumOfLogins
	}
	return 0
}

func (x *User) GetLatestLoginTime() int64 {
	if x != nil {
		return x.LatestLoginTime
	}
	return 0
}

func (x *User) GetAccessRole() string {
	if x != nil {
		return x.AccessRole
	}
	return ""
}

func (x *User) GetIsAnonymous() bool {
	if x != nil {
		return x.IsAnonymous
	}
	return false
}

type TFAInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"is_enabled" bson:"is_enabled"
	IsEnabled bool `protobuf:"varint,1,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled" bson:"is_enabled"`
	// @inject_tag: json:"secret" bson:"secret"
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret" bson:"secret"`
}

func (x *TFAInfo) Reset() {
	*x = TFAInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFAInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFAInfo) ProtoMessage() {}

func (x *TFAInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFAInfo.ProtoReflect.Descriptor instead.
func (*TFAInfo) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{1}
}

func (x *TFAInfo) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *TFAInfo) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type UserByPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *UserByPhoneRequest) Reset() {
	*x = UserByPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserByPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserByPhoneRequest) ProtoMessage() {}

func (x *UserByPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserByPhoneRequest.ProtoReflect.Descriptor instead.
func (*UserByPhoneRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{2}
}

func (x *UserByPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type UserByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserByEmailRequest) Reset() {
	*x = UserByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserByEmailRequest) ProtoMessage() {}

func (x *UserByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserByEmailRequest.ProtoReflect.Descriptor instead.
func (*UserByEmailRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{3}
}

func (x *UserByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UserByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserByIDRequest) Reset() {
	*x = UserByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserByIDRequest) ProtoMessage() {}

func (x *UserByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserByIDRequest.ProtoReflect.Descriptor instead.
func (*UserByIDRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{4}
}

func (x *UserByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddUserByPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Role  string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AddUserByPhoneRequest) Reset() {
	*x = AddUserByPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserByPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserByPhoneRequest) ProtoMessage() {}

func (x *AddUserByPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserByPhoneRequest.ProtoReflect.Descriptor instead.
func (*AddUserByPhoneRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{5}
}

func (x *AddUserByPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AddUserByPhoneRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type IDByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IDByNameRequest) Reset() {
	*x = IDByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDByNameRequest) ProtoMessage() {}

func (x *IDByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDByNameRequest.ProtoReflect.Descriptor instead.
func (*IDByNameRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{6}
}

func (x *IDByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IDByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IDByNameResponse) Reset() {
	*x = IDByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDByNameResponse) ProtoMessage() {}

func (x *IDByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDByNameResponse.ProtoReflect.Descriptor instead.
func (*IDByNameResponse) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{7}
}

func (x *IDByNameResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AttachDeviceTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AttachDeviceTokenRequest) Reset() {
	*x = AttachDeviceTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachDeviceTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachDeviceTokenRequest) ProtoMessage() {}

func (x *AttachDeviceTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachDeviceTokenRequest.ProtoReflect.Descriptor instead.
func (*AttachDeviceTokenRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{8}
}

func (x *AttachDeviceTokenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttachDeviceTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type DetachDeviceTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *DetachDeviceTokenRequest) Reset() {
	*x = DetachDeviceTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetachDeviceTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachDeviceTokenRequest) ProtoMessage() {}

func (x *DetachDeviceTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachDeviceTokenRequest.ProtoReflect.Descriptor instead.
func (*DetachDeviceTokenRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{9}
}

func (x *DetachDeviceTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserByNamePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserByNamePasswordRequest) Reset() {
	*x = UserByNamePasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserByNamePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserByNamePasswordRequest) ProtoMessage() {}

func (x *UserByNamePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserByNamePasswordRequest.ProtoReflect.Descriptor instead.
func (*UserByNamePasswordRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{10}
}

func (x *UserByNamePasswordRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserByNamePasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AddUserByNameAndPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Role        string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	IsAnonymous bool   `protobuf:"varint,4,opt,name=is_anonymous,json=isAnonymous,proto3" json:"is_anonymous,omitempty"`
}

func (x *AddUserByNameAndPasswordRequest) Reset() {
	*x = AddUserByNameAndPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserByNameAndPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserByNameAndPasswordRequest) ProtoMessage() {}

func (x *AddUserByNameAndPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserByNameAndPasswordRequest.ProtoReflect.Descriptor instead.
func (*AddUserByNameAndPasswordRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{11}
}

func (x *AddUserByNameAndPasswordRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddUserByNameAndPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddUserByNameAndPasswordRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AddUserByNameAndPasswordRequest) GetIsAnonymous() bool {
	if x != nil {
		return x.IsAnonymous
	}
	return false
}

type UserExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserExistsRequest) Reset() {
	*x = UserExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExistsRequest) ProtoMessage() {}

func (x *UserExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExistsRequest.ProtoReflect.Descriptor instead.
func (*UserExistsRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{12}
}

func (x *UserExistsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoesExist bool `protobuf:"varint,1,opt,name=does_exist,json=doesExist,proto3" json:"does_exist,omitempty"`
}

func (x *UserExistsResponse) Reset() {
	*x = UserExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExistsResponse) ProtoMessage() {}

func (x *UserExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExistsResponse.ProtoReflect.Descriptor instead.
func (*UserExistsResponse) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{13}
}

func (x *UserExistsResponse) GetDoesExist() bool {
	if x != nil {
		return x.DoesExist
	}
	return false
}

type UserByFederatedIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider FederatedIdentityProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=proto.FederatedIdentityProvider" json:"provider,omitempty"`
	Id       string                    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserByFederatedIDRequest) Reset() {
	*x = UserByFederatedIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserByFederatedIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserByFederatedIDRequest) ProtoMessage() {}

func (x *UserByFederatedIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserByFederatedIDRequest.ProtoReflect.Descriptor instead.
func (*UserByFederatedIDRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{14}
}

func (x *UserByFederatedIDRequest) GetProvider() FederatedIdentityProvider {
	if x != nil {
		return x.Provider
	}
	return FederatedIdentityProvider_UNKNOWN
}

func (x *UserByFederatedIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddUserWithFederatedIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider FederatedIdentityProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=proto.FederatedIdentityProvider" json:"provider,omitempty"`
	Id       string                    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Role     string                    `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AddUserWithFederatedIDRequest) Reset() {
	*x = AddUserWithFederatedIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserWithFederatedIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserWithFederatedIDRequest) ProtoMessage() {}

func (x *AddUserWithFederatedIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserWithFederatedIDRequest.ProtoReflect.Descriptor instead.
func (*AddUserWithFederatedIDRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{15}
}

func (x *AddUserWithFederatedIDRequest) GetProvider() FederatedIdentityProvider {
	if x != nil {
		return x.Provider
	}
	return FederatedIdentityProvider_UNKNOWN
}

func (x *AddUserWithFederatedIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddUserWithFederatedIDRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NewUser *User  `protobuf:"bytes,2,opt,name=new_user,json=newUser,proto3" json:"new_user,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserRequest) GetNewUser() *User {
	if x != nil {
		return x.NewUser
	}
	return nil
}

type ResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ResetPasswordRequest) Reset() {
	*x = ResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRequest) ProtoMessage() {}

func (x *ResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{17}
}

func (x *ResetPasswordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResetPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FetchUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	Skip   uint32 `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`
	Limit  uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *FetchUsersRequest) Reset() {
	*x = FetchUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchUsersRequest) ProtoMessage() {}

func (x *FetchUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchUsersRequest.ProtoReflect.Descriptor instead.
func (*FetchUsersRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{19}
}

func (x *FetchUsersRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *FetchUsersRequest) GetSkip() uint32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *FetchUsersRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type FetchUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Total uint32  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FetchUsersResponse) Reset() {
	*x = FetchUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchUsersResponse) ProtoMessage() {}

func (x *FetchUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchUsersResponse.ProtoReflect.Descriptor instead.
func (*FetchUsersResponse) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{20}
}

func (x *FetchUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *FetchUsersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RequestScopesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Scopes []string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *RequestScopesRequest) Reset() {
	*x = RequestScopesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestScopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestScopesRequest) ProtoMessage() {}

func (x *RequestScopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestScopesRequest.ProtoReflect.Descriptor instead.
func (*RequestScopesRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{21}
}

func (x *RequestScopesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RequestScopesRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type ScopesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scopes []string `protobuf:"bytes,1,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *ScopesResponse) Reset() {
	*x = ScopesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScopesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopesResponse) ProtoMessage() {}

func (x *ScopesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopesResponse.ProtoReflect.Descriptor instead.
func (*ScopesResponse) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{22}
}

func (x *ScopesResponse) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type ImportJSONRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ImportJSONRequest) Reset() {
	*x = ImportJSONRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportJSONRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportJSONRequest) ProtoMessage() {}

func (x *ImportJSONRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportJSONRequest.ProtoReflect.Descriptor instead.
func (*ImportJSONRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{23}
}

func (x *ImportJSONRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{24}
}

type UpdateLoginMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdateLoginMetadataRequest) Reset() {
	*x = UpdateLoginMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_storage_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoginMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoginMetadataRequest) ProtoMessage() {}

func (x *UpdateLoginMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_storage_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoginMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateLoginMetadataRequest) Descriptor() ([]byte, []int) {
	return file_user_storage_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateLoginMetadataRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_user_storage_proto protoreflect.FileDescriptor

var file_user_storage_proto_rawDesc = []byte{
	0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x03, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x29,
	0x0a, 0x08, 0x74, 0x66, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x46, 0x41, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x74, 0x66, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x22,
	0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f,
	0x75, 0x73, 0x22, 0x40, 0x0a, 0x07, 0x54, 0x46, 0x41, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x22, 0x2a, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x22, 0x2a, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x21, 0x0a, 0x0f,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x41, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x49, 0x44, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x49, 0x44, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a,
	0x18, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x30, 0x0a, 0x18, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x4b, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x88,
	0x01, 0x0a, 0x1f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x41, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x65, 0x73,
	0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x6f,
	0x65, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x81, 0x01, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x54, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x14, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x11, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x4d, 0x0a, 0x12, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x47, 0x0a, 0x14, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x27, 0x0a,
	0x11, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x35, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x2a, 0x5a, 0x0a, 0x19, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x43, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x57,
	0x49, 0x54, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x50, 0x50, 0x4c, 0x45,
	0x10, 0x04, 0x32, 0x98, 0x0a, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x08, 0x49, 0x44, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x44, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x44, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x11, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x42, 0x0a, 0x11, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x74,
	0x61, 0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x44, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x4b, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x3a, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0a, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x46, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x13, 0x5a,
	0x11, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_storage_proto_rawDescOnce sync.Once
	file_user_storage_proto_rawDescData = file_user_storage_proto_rawDesc
)

func file_user_storage_proto_rawDescGZIP() []byte {
	file_user_storage_proto_rawDescOnce.Do(func() {
		file_user_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_storage_proto_rawDescData)
	})
	return file_user_storage_proto_rawDescData
}

var file_user_storage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_user_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_user_storage_proto_goTypes = []interface{}{
	(FederatedIdentityProvider)(0),          // 0: proto.FederatedIdentityProvider
	(*User)(nil),                            // 1: proto.User
	(*TFAInfo)(nil),                         // 2: proto.TFAInfo
	(*UserByPhoneRequest)(nil),              // 3: proto.UserByPhoneRequest
	(*UserByEmailRequest)(nil),              // 4: proto.UserByEmailRequest
	(*UserByIDRequest)(nil),                 // 5: proto.UserByIDRequest
	(*AddUserByPhoneRequest)(nil),           // 6: proto.AddUserByPhoneRequest
	(*IDByNameRequest)(nil),                 // 7: proto.IDByNameRequest
	(*IDByNameResponse)(nil),                // 8: proto.IDByNameResponse
	(*AttachDeviceTokenRequest)(nil),        // 9: proto.AttachDeviceTokenRequest
	(*DetachDeviceTokenRequest)(nil),        // 10: proto.DetachDeviceTokenRequest
	(*UserByNamePasswordRequest)(nil),       // 11: proto.UserByNamePasswordRequest
	(*AddUserByNameAndPasswordRequest)(nil), // 12: proto.AddUserByNameAndPasswordRequest
	(*UserExistsRequest)(nil),               // 13: proto.UserExistsRequest
	(*UserExistsResponse)(nil),              // 14: proto.UserExistsResponse
	(*UserByFederatedIDRequest)(nil),        // 15: proto.UserByFederatedIDRequest
	(*AddUserWithFederatedIDRequest)(nil),   // 16: proto.AddUserWithFederatedIDRequest
	(*UpdateUserRequest)(nil),               // 17: proto.UpdateUserRequest
	(*ResetPasswordRequest)(nil),            // 18: proto.ResetPasswordRequest
	(*DeleteUserRequest)(nil),               // 19: proto.DeleteUserRequest
	(*FetchUsersRequest)(nil),               // 20: proto.FetchUsersRequest
	(*FetchUsersResponse)(nil),              // 21: proto.FetchUsersResponse
	(*RequestScopesRequest)(nil),            // 22: proto.RequestScopesRequest
	(*ScopesResponse)(nil),                  // 23: proto.ScopesResponse
	(*ImportJSONRequest)(nil),               // 24: proto.ImportJSONRequest
	(*Empty)(nil),                           // 25: proto.Empty
	(*UpdateLoginMetadataRequest)(nil),      // 26: proto.UpdateLoginMetadataRequest
}
var file_user_storage_proto_depIdxs = []int32{
	2,  // 0: proto.User.tfa_info:type_name -> proto.TFAInfo
	0,  // 1: proto.UserByFederatedIDRequest.provider:type_name -> proto.FederatedIdentityProvider
	0,  // 2: proto.AddUserWithFederatedIDRequest.provider:type_name -> proto.FederatedIdentityProvider
	1,  // 3: proto.UpdateUserRequest.new_user:type_name -> proto.User
	1,  // 4: proto.FetchUsersResponse.users:type_name -> proto.User
	3,  // 5: proto.UserStorage.UserByPhone:input_type -> proto.UserByPhoneRequest
	6,  // 6: proto.UserStorage.AddUserByPhone:input_type -> proto.AddUserByPhoneRequest
	5,  // 7: proto.UserStorage.UserByID:input_type -> proto.UserByIDRequest
	4,  // 8: proto.UserStorage.UserByEmail:input_type -> proto.UserByEmailRequest
	7,  // 9: proto.UserStorage.IDByName:input_type -> proto.IDByNameRequest
	9,  // 10: proto.UserStorage.AttachDeviceToken:input_type -> proto.AttachDeviceTokenRequest
	10, // 11: proto.UserStorage.DetachDeviceToken:input_type -> proto.DetachDeviceTokenRequest
	11, // 12: proto.UserStorage.UserByNamePassword:input_type -> proto.UserByNamePasswordRequest
	12, // 13: proto.UserStorage.AddUserByNameAndPassword:input_type -> proto.AddUserByNameAndPasswordRequest
	13, // 14: proto.UserStorage.UserExists:input_type -> proto.UserExistsRequest
	15, // 15: proto.UserStorage.UserByFederatedID:input_type -> proto.UserByFederatedIDRequest
	16, // 16: proto.UserStorage.AddUserWithFederatedID:input_type -> proto.AddUserWithFederatedIDRequest
	17, // 17: proto.UserStorage.UpdateUser:input_type -> proto.UpdateUserRequest
	18, // 18: proto.UserStorage.ResetPassword:input_type -> proto.ResetPasswordRequest
	19, // 19: proto.UserStorage.DeleteUser:input_type -> proto.DeleteUserRequest
	20, // 20: proto.UserStorage.FetchUsers:input_type -> proto.FetchUsersRequest
	22, // 21: proto.UserStorage.RequestScopes:input_type -> proto.RequestScopesRequest
	25, // 22: proto.UserStorage.Scopes:input_type -> proto.Empty
	24, // 23: proto.UserStorage.ImportJSON:input_type -> proto.ImportJSONRequest
	26, // 24: proto.UserStorage.UpdateLoginMetadata:input_type -> proto.UpdateLoginMetadataRequest
	25, // 25: proto.UserStorage.Close:input_type -> proto.Empty
	1,  // 26: proto.UserStorage.UserByPhone:output_type -> proto.User
	1,  // 27: proto.UserStorage.AddUserByPhone:output_type -> proto.User
	1,  // 28: proto.UserStorage.UserByID:output_type -> proto.User
	1,  // 29: proto.UserStorage.UserByEmail:output_type -> proto.User
	8,  // 30: proto.UserStorage.IDByName:output_type -> proto.IDByNameResponse
	25, // 31: proto.UserStorage.AttachDeviceToken:output_type -> proto.Empty
	25, // 32: proto.UserStorage.DetachDeviceToken:output_type -> proto.Empty
	1,  // 33: proto.UserStorage.UserByNamePassword:output_type -> proto.User
	1,  // 34: proto.UserStorage.AddUserByNameAndPassword:output_type -> proto.User
	14, // 35: proto.UserStorage.UserExists:output_type -> proto.UserExistsResponse
	1,  // 36: proto.UserStorage.UserByFederatedID:output_type -> proto.User
	1,  // 37: proto.UserStorage.AddUserWithFederatedID:output_type -> proto.User
	1,  // 38: proto.UserStorage.UpdateUser:output_type -> proto.User
	25, // 39: proto.UserStorage.ResetPassword:output_type -> proto.Empty
	25, // 40: proto.UserStorage.DeleteUser:output_type -> proto.Empty
	21, // 41: proto.UserStorage.FetchUsers:output_type -> proto.FetchUsersResponse
	23, // 42: proto.UserStorage.RequestScopes:output_type -> proto.ScopesResponse
	23, // 43: proto.UserStorage.Scopes:output_type -> proto.ScopesResponse
	25, // 44: proto.UserStorage.ImportJSON:output_type -> proto.Empty
	25, // 45: proto.UserStorage.UpdateLoginMetadata:output_type -> proto.Empty
	25, // 46: proto.UserStorage.Close:output_type -> proto.Empty
	26, // [26:47] is the sub-list for method output_type
	5,  // [5:26] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_user_storage_proto_init() }
func file_user_storage_proto_init() {
	if File_user_storage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFAInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserByPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserByPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachDeviceTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetachDeviceTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserByNamePasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserByNameAndPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserByFederatedIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserWithFederatedIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestScopesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScopesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportJSONRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_storage_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoginMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_storage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_storage_proto_goTypes,
		DependencyIndexes: file_user_storage_proto_depIdxs,
		EnumInfos:         file_user_storage_proto_enumTypes,
		MessageInfos:      file_user_storage_proto_msgTypes,
	}.Build()
	File_user_storage_proto = out.File
	file_user_storage_proto_rawDesc = nil
	file_user_storage_proto_goTypes = nil
	file_user_storage_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserStorageClient is the client API for UserStorage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserStorageClient interface {
	UserByPhone(ctx context.Context, in *UserByPhoneRequest, opts ...grpc.CallOption) (*User, error)
	AddUserByPhone(ctx context.Context, in *AddUserByPhoneRequest, opts ...grpc.CallOption) (*User, error)
	UserByID(ctx context.Context, in *UserByIDRequest, opts ...grpc.CallOption) (*User, error)
	UserByEmail(ctx context.Context, in *UserByEmailRequest, opts ...grpc.CallOption) (*User, error)
	IDByName(ctx context.Context, in *IDByNameRequest, opts ...grpc.CallOption) (*IDByNameResponse, error)
	AttachDeviceToken(ctx context.Context, in *AttachDeviceTokenRequest, opts ...grpc.CallOption) (*Empty, error)
	DetachDeviceToken(ctx context.Context, in *DetachDeviceTokenRequest, opts ...grpc.CallOption) (*Empty, error)
	UserByNamePassword(ctx context.Context, in *UserByNamePasswordRequest, opts ...grpc.CallOption) (*User, error)
	AddUserByNameAndPassword(ctx context.Context, in *AddUserByNameAndPasswordRequest, opts ...grpc.CallOption) (*User, error)
	UserExists(ctx context.Context, in *UserExistsRequest, opts ...grpc.CallOption) (*UserExistsResponse, error)
	UserByFederatedID(ctx context.Context, in *UserByFederatedIDRequest, opts ...grpc.CallOption) (*User, error)
	AddUserWithFederatedID(ctx context.Context, in *AddUserWithFederatedIDRequest, opts ...grpc.CallOption) (*User, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error)
	ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*Empty, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*Empty, error)
	FetchUsers(ctx context.Context, in *FetchUsersRequest, opts ...grpc.CallOption) (*FetchUsersResponse, error)
	RequestScopes(ctx context.Context, in *RequestScopesRequest, opts ...grpc.CallOption) (*ScopesResponse, error)
	Scopes(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ScopesResponse, error)
	ImportJSON(ctx context.Context, in *ImportJSONRequest, opts ...grpc.CallOption) (*Empty, error)
	UpdateLoginMetadata(ctx context.Context, in *UpdateLoginMetadataRequest, opts ...grpc.CallOption) (*Empty, error)
	Close(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type userStorageClient struct {
	cc grpc.ClientConnInterface
}

func NewUserStorageClient(cc grpc.ClientConnInterface) UserStorageClient {
	return &userStorageClient{cc}
}

func (c *userStorageClient) UserByPhone(ctx context.Context, in *UserByPhoneRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/UserByPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) AddUserByPhone(ctx context.Context, in *AddUserByPhoneRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/AddUserByPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) UserByID(ctx context.Context, in *UserByIDRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/UserByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) UserByEmail(ctx context.Context, in *UserByEmailRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/UserByEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) IDByName(ctx context.Context, in *IDByNameRequest, opts ...grpc.CallOption) (*IDByNameResponse, error) {
	out := new(IDByNameResponse)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/IDByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) AttachDeviceToken(ctx context.Context, in *AttachDeviceTokenRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/AttachDeviceToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) DetachDeviceToken(ctx context.Context, in *DetachDeviceTokenRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/DetachDeviceToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) UserByNamePassword(ctx context.Context, in *UserByNamePasswordRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/UserByNamePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) AddUserByNameAndPassword(ctx context.Context, in *AddUserByNameAndPasswordRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/AddUserByNameAndPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) UserExists(ctx context.Context, in *UserExistsRequest, opts ...grpc.CallOption) (*UserExistsResponse, error) {
	out := new(UserExistsResponse)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/UserExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) UserByFederatedID(ctx context.Context, in *UserByFederatedIDRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/UserByFederatedID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) AddUserWithFederatedID(ctx context.Context, in *AddUserWithFederatedIDRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/AddUserWithFederatedID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/ResetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) FetchUsers(ctx context.Context, in *FetchUsersRequest, opts ...grpc.CallOption) (*FetchUsersResponse, error) {
	out := new(FetchUsersResponse)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/FetchUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) RequestScopes(ctx context.Context, in *RequestScopesRequest, opts ...grpc.CallOption) (*ScopesResponse, error) {
	out := new(ScopesResponse)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/RequestScopes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) Scopes(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ScopesResponse, error) {
	out := new(ScopesResponse)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/Scopes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) ImportJSON(ctx context.Context, in *ImportJSONRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/ImportJSON", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) UpdateLoginMetadata(ctx context.Context, in *UpdateLoginMetadataRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/UpdateLoginMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userStorageClient) Close(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.UserStorage/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserStorageServer is the server API for UserStorage service.
type UserStorageServer interface {
	UserByPhone(context.Context, *UserByPhoneRequest) (*User, error)
	AddUserByPhone(context.Context, *AddUserByPhoneRequest) (*User, error)
	UserByID(context.Context, *UserByIDRequest) (*User, error)
	UserByEmail(context.Context, *UserByEmailRequest) (*User, error)
	IDByName(context.Context, *IDByNameRequest) (*IDByNameResponse, error)
	AttachDeviceToken(context.Context, *AttachDeviceTokenRequest) (*Empty, error)
	DetachDeviceToken(context.Context, *DetachDeviceTokenRequest) (*Empty, error)
	UserByNamePassword(context.Context, *UserByNamePasswordRequest) (*User, error)
	AddUserByNameAndPassword(context.Context, *AddUserByNameAndPasswordRequest) (*User, error)
	UserExists(context.Context, *UserExistsRequest) (*UserExistsResponse, error)
	UserByFederatedID(context.Context, *UserByFederatedIDRequest) (*User, error)
	AddUserWithFederatedID(context.Context, *AddUserWithFederatedIDRequest) (*User, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*User, error)
	ResetPassword(context.Context, *ResetPasswordRequest) (*Empty, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*Empty, error)
	FetchUsers(context.Context, *FetchUsersRequest) (*FetchUsersResponse, error)
	RequestScopes(context.Context, *RequestScopesRequest) (*ScopesResponse, error)
	Scopes(context.Context, *Empty) (*ScopesResponse, error)
	ImportJSON(context.Context, *ImportJSONRequest) (*Empty, error)
	UpdateLoginMetadata(context.Context, *UpdateLoginMetadataRequest) (*Empty, error)
	Close(context.Context, *Empty) (*Empty, error)
}

// UnimplementedUserStorageServer can be embedded to have forward compatible implementations.
type UnimplementedUserStorageServer struct {
}

func (*UnimplementedUserStorageServer) UserByPhone(context.Context, *UserByPhoneRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserByPhone not implemented")
}
func (*UnimplementedUserStorageServer) AddUserByPhone(context.Context, *AddUserByPhoneRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserByPhone not implemented")
}
func (*UnimplementedUserStorageServer) UserByID(context.Context, *UserByIDRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserByID not implemented")
}
func (*UnimplementedUserStorageServer) UserByEmail(context.Context, *UserByEmailRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserByEmail not implemented")
}
func (*UnimplementedUserStorageServer) IDByName(context.Context, *IDByNameRequest) (*IDByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IDByName not implemented")
}
func (*UnimplementedUserStorageServer) AttachDeviceToken(context.Context, *AttachDeviceTokenRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachDeviceToken not implemented")
}
func (*UnimplementedUserStorageServer) DetachDeviceToken(context.Context, *DetachDeviceTokenRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachDeviceToken not implemented")
}
func (*UnimplementedUserStorageServer) UserByNamePassword(context.Context, *UserByNamePasswordRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserByNamePassword not implemented")
}
func (*UnimplementedUserStorageServer) AddUserByNameAndPassword(context.Context, *AddUserByNameAndPasswordRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserByNameAndPassword not implemented")
}
func (*UnimplementedUserStorageServer) UserExists(context.Context, *UserExistsRequest) (*UserExistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserExists not implemented")
}
func (*UnimplementedUserStorageServer) UserByFederatedID(context.Context, *UserByFederatedIDRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserByFederatedID not implemented")
}
func (*UnimplementedUserStorageServer) AddUserWithFederatedID(context.Context, *AddUserWithFederatedIDRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserWithFederatedID not implemented")
}
func (*UnimplementedUserStorageServer) UpdateUser(context.Context, *UpdateUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedUserStorageServer) ResetPassword(context.Context, *ResetPasswordRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPassword not implemented")
}
func (*UnimplementedUserStorageServer) DeleteUser(context.Context, *DeleteUserRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}
func (*UnimplementedUserStorageServer) FetchUsers(context.Context, *FetchUsersRequest) (*FetchUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchUsers not implemented")
}
func (*UnimplementedUserStorageServer) RequestScopes(context.Context, *RequestScopesRequest) (*ScopesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestScopes not implemented")
}
func (*UnimplementedUserStorageServer) Scopes(context.Context, *Empty) (*ScopesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Scopes not implemented")
}
func (*UnimplementedUserStorageServer) ImportJSON(context.Context, *ImportJSONRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportJSON not implemented")
}
func (*UnimplementedUserStorageServer) UpdateLoginMetadata(context.Context, *UpdateLoginMetadataRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLoginMetadata not implemented")
}
func (*UnimplementedUserStorageServer) Close(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}

func RegisterUserStorageServer(s *grpc.Server, srv UserStorageServer) {
	s.RegisterService(&_UserStorage_serviceDesc, srv)
}

func _UserStorage_UserByPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByPhoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).UserByPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/UserByPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).UserByPhone(ctx, req.(*UserByPhoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_AddUserByPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserByPhoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).AddUserByPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/AddUserByPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).AddUserByPhone(ctx, req.(*AddUserByPhoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_UserByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).UserByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/UserByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).UserByID(ctx, req.(*UserByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_UserByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).UserByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/UserByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).UserByEmail(ctx, req.(*UserByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_IDByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).IDByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/IDByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).IDByName(ctx, req.(*IDByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_AttachDeviceToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachDeviceTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).AttachDeviceToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/AttachDeviceToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).AttachDeviceToken(ctx, req.(*AttachDeviceTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_DetachDeviceToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetachDeviceTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).DetachDeviceToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/DetachDeviceToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).DetachDeviceToken(ctx, req.(*DetachDeviceTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_UserByNamePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByNamePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).UserByNamePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/UserByNamePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).UserByNamePassword(ctx, req.(*UserByNamePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_AddUserByNameAndPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserByNameAndPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).AddUserByNameAndPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/AddUserByNameAndPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).AddUserByNameAndPassword(ctx, req.(*AddUserByNameAndPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_UserExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserExistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).UserExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/UserExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).UserExists(ctx, req.(*UserExistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_UserByFederatedID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByFederatedIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).UserByFederatedID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/UserByFederatedID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).UserByFederatedID(ctx, req.(*UserByFederatedIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_AddUserWithFederatedID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserWithFederatedIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).AddUserWithFederatedID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/AddUserWithFederatedID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).AddUserWithFederatedID(ctx, req.(*AddUserWithFederatedIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).ResetPassword(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_FetchUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).FetchUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/FetchUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).FetchUsers(ctx, req.(*FetchUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_RequestScopes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestScopesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).RequestScopes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/RequestScopes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).RequestScopes(ctx, req.(*RequestScopesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_Scopes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).Scopes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/Scopes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).Scopes(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_ImportJSON_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportJSONRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).ImportJSON(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/ImportJSON",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).ImportJSON(ctx, req.(*ImportJSONRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_UpdateLoginMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLoginMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).UpdateLoginMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/UpdateLoginMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).UpdateLoginMetadata(ctx, req.(*UpdateLoginMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserStorage_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserStorageServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserStorage/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserStorageServer).Close(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserStorage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.UserStorage",
	HandlerType: (*UserStorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserByPhone",
			Handler:    _UserStorage_UserByPhone_Handler,
		},
		{
			MethodName: "AddUserByPhone",
			Handler:    _UserStorage_AddUserByPhone_Handler,
		},
		{
			MethodName: "UserByID",
			Handler:    _UserStorage_UserByID_Handler,
		},
		{
			MethodName: "UserByEmail",
			Handler:    _UserStorage_UserByEmail_Handler,
		},
		{
			MethodName: "IDByName",
			Handler:    _UserStorage_IDByName_Handler,
		},
		{
			MethodName: "AttachDeviceToken",
			Handler:    _UserStorage_AttachDeviceToken_Handler,
		},
		{
			MethodName: "DetachDeviceToken",
			Handler:    _UserStorage_DetachDeviceToken_Handler,
		},
		{
			MethodName: "UserByNamePassword",
			Handler:    _UserStorage_UserByNamePassword_Handler,
		},
		{
			MethodName: "AddUserByNameAndPassword",
			Handler:    _UserStorage_AddUserByNameAndPassword_Handler,
		},
		{
			MethodName: "UserExists",
			Handler:    _UserStorage_UserExists_Handler,
		},
		{
			MethodName: "UserByFederatedID",
			Handler:    _UserStorage_UserByFederatedID_Handler,
		},
		{
			MethodName: "AddUserWithFederatedID",
			Handler:    _UserStorage_AddUserWithFederatedID_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserStorage_UpdateUser_Handler,
		},
		{
			MethodName: "ResetPassword",
			Handler:    _UserStorage_ResetPassword_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserStorage_DeleteUser_Handler,
		},
		{
			MethodName: "FetchUsers",
			Handler:    _UserStorage_FetchUsers_Handler,
		},
		{
			MethodName: "RequestScopes",
			Handler:    _UserStorage_RequestScopes_Handler,
		},
		{
			MethodName: "Scopes",
			Handler:    _UserStorage_Scopes_Handler,
		},
		{
			MethodName: "ImportJSON",
			Handler:    _UserStorage_ImportJSON_Handler,
		},
		{
			MethodName: "UpdateLoginMetadata",
			Handler:    _UserStorage_UpdateLoginMetadata_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _UserStorage_Close_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_storage.proto",
}
