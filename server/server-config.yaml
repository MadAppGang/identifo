# HTTP address of Indentifo server.
host: http://localhost:8080

# Folder where public and private keys are stored.
pemFolderPath: ../../jwt
# Private key for signing JWT tokens.
privateKey: private.pem
# Public key for verifying JWT tokens.
publicKey: public.pem
# JWT token issuer.
issuer: http://localhost:8080
# Algorithm for the token service. Supported values are: "rs256", "es256" and "auto".
algorithm: auto

# Storage for admin sessions.
sessionStorage: 
  type: memory # Supported values are "memory", "redis", and "dynamodb".
  # Admin session duration in seconds.
  # This value specifies the maximum time of inactivity in the admin panel before asking to relogin.
  sessionDuration: 300
  address: # Redis-related setting.
  password: # Redis-related setting.
  db: # Redis-related setting.
  region: # DynamoDB-related setting.
  endpoint: # DynamoDB-related setting. Can be figured out automatically from the region.

# Storage for server configuration.
configurationStorage:
  # Configuration storage type. Supported values are: "etcd", "s3", and "file".
  type: etcd
  # Key for accessing server settings in the configuraion storage.
  # If type is s3, must be a name of an object in the bucket (e.g, server-config.yaml).
  # If type is file, must be a filename (e.g, server-config.yaml).
  settingsKey: identifo/server-settings
  endpoints: # Etcd-related setting.
  region: #S3-related setting.

# Names of environment variables that store admin credentials.
adminAccount:
  loginEnvName: IDENTIFO_ADMIN_LOGIN
  passwordEnvName: IDENTIFO_ADMIN_PASSWORD

# File with server settings.
serverConfigPath: ../../server/server-config.yaml
# Storage settings holds together all storage settings.
# All settings for particular database engine (i.e, filepaths for BoltDB,
# endpoints and regions for DynamoDB etc.) are assumed to be the same across
# all storages. If they are not the same, the latest option in this file will be applied.
# For example, if there are two MongoDB-backed storages, appStorage and tokenStorage,
# and endpoint for appStorage is localhost:27017, while tokenStorage's endpoint is localhost:27018,
# server will connect both storages to localhost:27018.
storage:
  appStorage:
    # Type of the database. Supported values are: "boltdb", "mongodb", "dynamodb" and "fake" for in-memory storage.
    type: boltdb
    # Name of the database (MongoDB-specific)
    name: identifo
    # Endpoint of the database server (MongoDB and DynamoDB specific). For DynamoDB, can be inferred from the region automatically.
    endpoint: localhost:27017
    # AWS Region where the database is located in (DynamoDB-specific).
    # Full list of possible values: https://docs.aws.amazon.com/general/latest/gr/rande.html.
    region: us-east-2
    # Path to the database file (BoltDB-specific).
    path: ./db.db
  userStorage:
    type: boltdb
    name: identifo
    endpoint: localhost:27017
    region: us-east-2
    path: ./db.db
  tokenStorage:
    type: boltdb
    name: identifo
    endpoint: localhost:27017
    region: us-east-2
    path: ./db.db
  verificationCodeStorage:
    type: boltdb
    name: identifo
    endpoint: localhost:27017
    region: us-east-2
    path: ./db.db

# Mail service name. Supported values are "mailgun" and "aws ses".
mailService: aws ses

# SMS service settings.
smsService:
  type: mock # Supported values are: "twilio", "mock".
  accountSid: # Twilio-related setting.
  authToken: # Twilio-related setting.
  serviceSid: # Twilio-related setting.

# Supported login ways.
loginWith:
  phone: true
  username: true
  federated: true

# Folder for the static files.
staticFolderPath: ../../web/static
# Forder for the email templates.
emailTemplatesPath: ../../email_templates
# Email template names.
emailTemplateNames:
  welcome: welcome.html
  resetPassword: reset_password.html
  inviteEmail: invite_email.html
  verifyEmail: verify_email.html